name: Pull Request

on:
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

env:
  BUILD_STRING: "${{ github.run_number }}-${{ github.sha }}"

jobs:
  lint_and_test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgis/postgis:15-3.3
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpw
          POSTGRES_DB: vha_test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.42.4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'v18.20.2'

      - name: Run check
        run: deno task check

      - name: Write .env file
        run: |
          echo "DATABASE_URL=postgres://testuser:testpw@localhost:5432/vha_test" > .env
          echo "GOOGLE_MAPS_API_KEY=TEST_GOOGLE_MAPS_API_KEY" >> .env
          echo "SKIP_GOOGLE_MAPS=true" >> .env

      - name: Cache medplum
        id: cache-medplum
        uses: actions/cache@v4
        with:
          path: medplum
          key: ${{ runner.os }}-medplum

      - name: Install medplum
        run: cd medplum && npm install && npx turbo run build

      - name: Migrate database (FHIR medplum)
        run: deno task db:migrate:medplum

      - name: Migrate database (VHA)
        run: deno task db:migrate:latest

      - name: Load seeds
        run: deno task db:seeds:load

      - name: Run build
        run: deno task build

      - name: Run tests
        run: deno task test --skip-migrate-check && deno task test:chatbot

  compile_others:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.42.4

      - name: Compile chatbot
        run: deno task compile:chatbot

      - name: Compile token_refresher
        run: deno task compile:token_refresher

  compile_web:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.42.4

      - name: Build web
        run: deno task build

      - name: Compile web
        run:  deno task compile:web