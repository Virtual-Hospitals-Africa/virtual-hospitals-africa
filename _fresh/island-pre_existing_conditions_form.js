import{a as C,b as c}from"./chunk-KP6EB7FB.js";import"./chunk-24A472CK.js";import"./chunk-QTVL75T3.js";import"./chunk-6QIUJ7X2.js";import"./chunk-QXBV4OOZ.js";import"./chunk-FKUAOK4K.js";import{a as p}from"./chunk-LTMG5A4G.js";import"./chunk-VGGCM2XJ.js";import"./chunk-AAS3MA3C.js";import"./chunk-Z5ZZXA55.js";import"./chunk-QPM7RCMO.js";import"./chunk-XBB34SOY.js";import"./chunk-E36SNTQA.js";import"./chunk-HO4JABHR.js";import"./chunk-FB5V53QR.js";import"./chunk-G73ZFE37.js";import{a as m}from"./chunk-DZI5S33S.js";import"./chunk-7QVJUEYK.js";import{a as e}from"./chunk-D7WMKMTL.js";import"./chunk-AKT74HKI.js";var g=(r=[])=>{let i=new Map;for(let o of r){let d=o.comorbidities.map(({id:t})=>({id:t,removed:!1})),n=o.medications.map(({id:t})=>({id:t,removed:!1}));i.set(o.id,{comorbidities:d,medications:n,removed:!1})}return i};function x({preExistingConditions:r}){let[i,o]=m(g(r)),d=()=>{let n=C(),t=new Map(i);t.set(n,{comorbidities:[],medications:[],removed:!1}),o(new Map(t))};return e("div",{children:[Array.from(i.entries()).map(([n,t],f)=>!t.removed&&e(c,{condition_id:n,condition_index:f,condition_state:t,preExistingConditions:r,removeCondition:()=>{let s=new Map(i);s.set(n,{removed:!0}),o(new Map(s))},updateCondition:s=>{let a=new Map(i);a.set(n,s),o(new Map(a))}})),e(p,{text:"Add Condition",onClick:d})]})}export{x as default};
