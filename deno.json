{
  "tasks": {
    "chatbot:patient": "deno task run:trusted chatbot/chatbot.ts patient",
    "chatbot:pharmacist": "deno task run:trusted chatbot/chatbot.ts pharmacist",
    "token_refresher": "deno task run:trusted token_refresher/token_refresher.ts",
    "build": "BUILDING=true deno task run:trusted dev.ts build",
    "start": "deno task run:trusted --watch=chatbot/,db/,islands/,util/,components/,external-clients/,routes/,static/,shared/ dev.ts",
    "start:beep": "./scripts/watch_and_beep.sh '(Error|error)' deno start",
    "rebuild": "rm -rf /_fresh && rm -rf node_modules && deno task lock:reset && deno task build",
    "web": "deno task run:trusted main.ts",
    "db:codegen": "./db/codegen.sh",
    "db:local": "./db/local.sh",
    "db:reset": "deno task run:trusted ./db/reset.ts",
    "db:migrate": "deno task run:trusted db/migrate.ts",
    "db:seed": "deno task run:trusted db/seed/run.ts",
    "db:drop": "deno task run:trusted db/drop.ts",
    "db:dump": "deno task run:trusted db/dump.ts",
    "db:restore": "deno task run:trusted db/restore.ts",
    "db:recreate": "deno task run:trusted db/recreate.ts",
    "medplum:setup": "cd medplum && npm install && npx turbo run build && cd ..",
    "medplum:server": "deno task run:trusted external-clients/medplum/server.ts",
    "medplum:superadmin": "deno task run:trusted external-clients/medplum/superadmin.ts",
    "heroku": "deno task run:trusted ./scripts/heroku.ts",
    "compile": "DENO_TLS_CA_STORE=system deno compile -A --unsafely-ignore-certificate-errors --unstable --target x86_64-unknown-linux-gnu",
    "compile:chatbot": "deno task compile --output binaries/chatbot chatbot/chatbot.ts",
    "compile:token_refresher": "deno task compile --output binaries/token_refresher token_refresher/token_refresher.ts",
    "compile:web": "deno task compile --output binaries/web main.ts",
    "lock:reset": "rm -f deno.lock && deno cache --reload main.ts chatbot/chatbot.ts token_refresher/token_refresher.ts",
    "repl": "DENO_TLS_CA_STORE=system deno repl -A --unsafely-ignore-certificate-errors --unstable-temporal --env --eval-file=repl.ts",
    "run:trusted": "DENO_TLS_CA_STORE=system deno run -A --unstable-temporal --env --unsafely-ignore-certificate-errors",
    "switch:prod": "cp .env.prod .env",
    "switch:local": "cp .env.local .env",
    "test": "./scripts/test.sh",
    "test:chatbot": "./scripts/test_chatbot.sh",
    "test:one": "rm -f test_server.log && deno task db:migrate:check && DENO_TLS_CA_STORE=system IS_TEST=true deno test -A --unstable-temporal --env --unsafely-ignore-certificate-errors",
    "test:watch": "./scripts/watch_and_beep.sh FAILED deno task test --watch",
    "tmux": "./scripts/tmux.sh",
    "preview": "deno run -A main.ts",
    "check": "deno fmt --check && deno lint && find . -name '*.ts' -o -name '*.tsx' | grep -v node_modules | grep -v '^./medplum/' | grep -v '^./chatbot/' | xargs deno check",
    "cli": "echo \"import '\\$fresh/src/dev/cli.ts'\" | deno run --unstable -A -",
    "manifest": "deno task cli manifest $(pwd)"
  },
  "compilerOptions": { "jsx": "react-jsx", "jsxImportSource": "preact" },
  "fmt": {
    "indentWidth": 2,
    "semiColons": false,
    "singleQuote": true,
    "proseWrap": "preserve",
    "exclude": ["**/medplum/*"]
  },
  "lint": {
    "exclude": ["medplum/"],
    "rules": { "include": ["no-unused-vars"], "tags": ["fresh", "recommended"] }
  },
  "test": { "exclude": ["**/medplum/**/*.*"] },
  "imports": {
    "$fresh-testing-library": "https://deno.land/x/fresh_testing_library@0.12.0/mod.ts",
    "$fresh-testing-library/": "https://deno.land/x/fresh_testing_library@0.12.0/",
    "$fresh/": "https://deno.land/x/fresh@1.6.8/",
    "@headlessui/react": "https://esm.sh/*@headlessui/react@1.7.17?alias=react:preact/compat,react-dom:preact/compat,client-only:preact/compat",
    "@medplum/core": "npm:@medplum/core",
    "@preact/signals": "https://esm.sh/*@preact/signals@1.2.2",
    "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.5.1",
    "@std/cli": "jsr:@std/cli@^0.224.7",
    "@tailwindcss/forms": "npm:@tailwindcss/forms@0.5.7",
    "cheerio": "https://esm.sh/v136/cheerio@1.0.0-rc.12",
    "csv": "https://deno.land/x/csv@v0.8.0/mod.ts",
    "fast-levenshtein": "npm:fast-levenshtein@3.0.0",
    "fast-xml-parser": "npm:fast-xml-parser@4.3.4",
    "ffmpeg": "https://deno.land/x/deno_ffmpeg@v3.1.0/mod.ts",
    "kysely": "https://cdn.jsdelivr.net/npm/kysely/dist/esm/index.js",
    "kysely-deno-postgres": "https://raw.githubusercontent.com/will-weiss/kysely-deno-postgres/main/mod.ts",
    "kysely/": "https://cdn.jsdelivr.net/npm/kysely/dist/esm/",
    "natural": "npm:natural@6.10.4",
    "preact": "https://esm.sh/preact@10.20.1",
    "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.1.0",
    "preact/": "https://esm.sh/preact@10.20.1/",
    "react": "https://esm.sh/preact@10.20.1/compat",
    "redis": "https://deno.land/x/redis@v0.25.5/mod.ts",
    "redlock": "https://deno.land/x/redlock@v1.0/mod.ts",
    "spinners": "https://deno.land/x/spinners/mod.ts",
    "std/": "https://deno.land/std@0.214.0/",
    "tailwindcss": "npm:tailwindcss@3.3.5",
    "tailwindcss/": "npm:/tailwindcss@3.3.5/",
    "tailwindcss/plugin": "npm:/tailwindcss@3.3.5/plugin.js"
  },
  "exclude": ["**/_fresh/*"],
  "nodeModulesDir": true
}
