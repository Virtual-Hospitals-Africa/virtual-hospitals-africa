{
  "tasks": {
    "chatbot": "deno task run:trusted chatbot/chatbot.ts",
    "token_refresher": "deno task run:trusted token_refresher/token_refresher.ts",
    "build": "BUILDING=true deno task run:trusted dev.ts build",
    "start": "./scripts/watch_and_beep.sh '(Error|error)' deno task run:trusted --watch=chatbot/,db/,islands/,util/,components/,external-clients/,routes/,static/,shared/ dev.ts",
    "rebuild": "rm -rf /_fresh && rm -rf node_modules && deno task lock:reset && deno task build",
    "web": "deno task run:trusted main.ts",
    "db:codegen": "cd ./db/codegen && npm install && cd ../.. && ./db/codegen/node_modules/.bin/kysely-codegen --out-file db.d.ts && echo 'type Buffer = Uint8Array' >> db.d.ts",
    "db:migrate:create": "deno task run:trusted db/create-migration.ts",
    "db:migrate:check": "deno task run:trusted db/migrate.ts check",
    "db:migrate:up": "deno task run:trusted db/migrate.ts up",
    "db:migrate:latest": "deno task run:trusted db/migrate.ts latest",
    "db:migrate:down": "deno task run:trusted db/migrate.ts down",
    "db:migrate:to": "deno task run:trusted db/migrate.ts to",
    "db:migrate:wipe": "deno task run:trusted db/migrate.ts wipe",
    "db:migrate:redo": "deno task run:trusted db/migrate.ts down && deno task run:trusted db/migrate.ts up",
    "db:migrate:redo:all": "deno task run:trusted db/redo_all.ts",
    "db:migrate:local": "./db/migrate_local.sh",
    "db:reset": "deno task run:trusted db/meta.ts",
    "heroku:chatbot:up": "heroku ps:scale chatbot=1",
    "heroku:chatbot:down": "heroku ps:scale chatbot=0",
    "heroku:token_refresher:up": "heroku ps:scale token_refresher=1",
    "heroku:token_refresher:down": "heroku ps:scale token_refresher=0",
    "heroku:web:up": "heroku ps:scale web=1",
    "heroku:web:down": "heroku ps:scale web=0",
    "compile": "DENO_TLS_CA_STORE=system deno compile -A --unsafely-ignore-certificate-errors --unstable --target x86_64-unknown-linux-gnu",
    "compile:chatbot": "deno task compile --output binaries/chatbot chatbot/chatbot.ts",
    "compile:token_refresher": "deno task compile --output binaries/token_refresher token_refresher/token_refresher.ts",
    "compile:web": "deno task compile --output binaries/web main.ts",
    "lock:reset": "rm -f deno.lock && deno cache --reload main.ts chatbot/chatbot.ts token_refresher/token_refresher.ts",
    "repl": "DENO_TLS_CA_STORE=system deno repl -A --unsafely-ignore-certificate-errors --unstable-temporal --env --eval-file=repl.ts",
    "run:trusted": "DENO_TLS_CA_STORE=system deno run -A --unstable-temporal --env --unsafely-ignore-certificate-errors",
    "switch:prod": "cp .env.prod .env",
    "switch:local": "cp .env.local .env",
    "test": "rm -f test_server.log && deno task db:migrate:check && DENO_TLS_CA_STORE=system IS_TEST=true deno test -A --unstable-temporal --env --unsafely-ignore-certificate-errors --ignore=test/chatbot --parallel",
    "test:chatbot": "DENO_TLS_CA_STORE=system IS_TEST=true deno test -A --unstable-temporal --env --unsafely-ignore-certificate-errors test/chatbot",
    "test:one": "rm -f test_server.log && deno task db:migrate:check && DENO_TLS_CA_STORE=system IS_TEST=true deno test -A --unstable-temporal --env --unsafely-ignore-certificate-errors",
    "test:watch": "./scripts/watch_and_beep.sh FAILED deno task test --watch",
    "tmux": "./scripts/tmux.sh",
    "preview": "deno run -A main.ts",
    "check": "deno fmt --check && deno lint && find . -name '*.ts' -o -name '*.tsx' | grep -v node_modules | xargs deno check",
    "cli": "echo \"import '\\$fresh/src/dev/cli.ts'\" | deno run --unstable -A -",
    "manifest": "deno task cli manifest $(pwd)"
  },
  "compilerOptions": { "jsx": "react-jsx", "jsxImportSource": "preact" },
  "fmt": {
    "indentWidth": 2,
    "semiColons": false,
    "singleQuote": true,
    "proseWrap": "preserve"
  },
  "lint": {
    "rules": { "include": ["no-unused-vars"], "tags": ["fresh", "recommended"] }
  },
  "imports": {
    "$fresh/": "https://deno.land/x/fresh@1.6.3/",
    "kysely": "https://cdn.jsdelivr.net/npm/kysely/dist/esm/index.js",
    "kysely/": "https://cdn.jsdelivr.net/npm/kysely/dist/esm/",
    "kysely-deno-postgres": "https://deno.land/x/kysely_deno_postgres@v0.4.0/mod.ts",
    "preact": "https://esm.sh/preact@10.19.2",
    "preact/": "https://esm.sh/preact@10.19.2/",
    "preact-render-to-string": "https://esm.sh/*preact-render-to-string@6.1.0",
    "@preact/signals": "https://esm.sh/*@preact/signals@1.2.1",
    "@preact/signals-core": "https://esm.sh/*@preact/signals-core@1.5.0",
    "fresh_session": "https://deno.land/x/fresh_session@0.2.2/mod.ts",
    "redis": "https://deno.land/x/redis@v0.30.0/mod.ts",
    "std/": "https://deno.land/std@0.214.0/",
    "tailwindcss": "npm:tailwindcss@3.3.5",
    "tailwindcss/": "npm:/tailwindcss@3.3.5/",
    "tailwindcss/plugin": "npm:/tailwindcss@3.3.5/plugin.js",
    "@tailwindcss/forms": "npm:@tailwindcss/forms@0.5.7",
    "csv": "https://deno.land/x/csv@v0.8.0/mod.ts",
    "cheerio": "https://esm.sh/v136/cheerio@1.0.0-rc.12",
    "@headlessui/react": "https://esm.sh/*@headlessui/react@1.7.17?alias=react:preact/compat,react-dom:preact/compat,client-only:preact/compat",
    "react": "https://esm.sh/preact@10.19.2/compat",
    "$fresh-testing-library": "https://deno.land/x/fresh_testing_library@0.12.0/mod.ts",
    "$fresh-testing-library/": "https://deno.land/x/fresh_testing_library@0.12.0/",
    "ffmpeg": "https://deno.land/x/deno_ffmpeg@v3.1.0/mod.ts",
    "fast-xml-parser": "npm:fast-xml-parser@4.3.4",
    "fast-levenshtein": "npm:fast-levenshtein@3.0.0",
    "natural": "npm:natural@6.10.4"
  },
  "exclude": ["**/_fresh/*"],
  "nodeModulesDir": true
}
